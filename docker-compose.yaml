version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: app-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgrespassword}
      POSTGRES_DB: ${POSTGRES_DB:-appdb}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5430:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-appdb}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Ngrok Server
  ngrok:
    image: ngrok/ngrok:latest
    command:
      - "http"
      - "nextjs:3000"
      - "--domain=moccasin-selected-prawn.ngrok-free.app"
    environment:
      NGROK_AUTHTOKEN: ${NGROK_AUTHTOKEN}
    ports:
      - "4040:4040"
    networks:
      - app-network
    depends_on:
      - nextjs

  # Next.js Application
  nextjs:
    build:
      context: .
      target: ${NODE_ENV:-development}
    container_name: nextjs-app
    restart: unless-stopped
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET:-your-secret-key-change-in-production}
      - SIGNING_SECRET=${SIGNING_SECRET:-signing-secret}
    ports:
      - "3000:3000"
      - "3001:3001"
      - "5555:5555"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
